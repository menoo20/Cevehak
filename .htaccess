# Clean URL rewrite rules for GitHub Pages
# This removes .html extensions from URLs and handles routing

RewriteEngine On

# Handle specific routes first (for GitHub Pages Jekyll)
RewriteRule ^upload-cv/?$ /upload-cv/ [L]
RewriteRule ^create-from-scratch/?$ /create-from-scratch/ [L]
RewriteRule ^create-cv-only/?$ /create-cv-only/ [L]

# Fallback: Remove .html extension from URLs
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^([^\.]+)$ $1.html [NC,L]

# Redirect .html URLs to clean URLs (prevent duplicate content)
RewriteCond %{THE_REQUEST} /([^.]+)\.html [NC]
RewriteRule ^ /%1? [NC,L,R=301]

# Handle views directory routing (fallback for direct access)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(upload-cv|create-from-scratch|create-cv-only)/?$ /views/$1.html [NC,L]

# Force HTTPS (optional but recommended)
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Cache Control Headers
<IfModule mod_headers.c>
    # Cache static assets for 1 hour
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|webp|ico|svg)$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
    
    # Cache HTML files for 5 minutes
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "public, max-age=300"
    </FilesMatch>
    
    # No cache for JSON files (language files)
    <FilesMatch "\.json$">
        Header set Cache-Control "no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires "0"
    </FilesMatch>
</IfModule>
